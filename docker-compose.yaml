version: "3.7"
services:
    server:
        build:
            context: ./server
            dockerfile: Dockerfile
        depends_on:
            - traefik
            - alpha
            - zero
            - redis
        ports:
            - "8080:80"
        env_file: ./server/.env
        environment:
            PORT: 80
            REDIS_HOST: redis:6379
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.server.rule=PathPrefix(`/server`)"
            - "traefik.http.routers.server.entrypoints=web"
    finder:
        build:
            context: ./finder
            dockerfile: Dockerfile
        depends_on:
            - traefik
            - redis
            - server
        ports:
            - "8070:80"
            - "50051:50051"
        environment:
            PORT: 80
            TCP_PORT: 50051
            REDIS_HOST: redis:6379
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.finder.rule=PathPrefix(`/finder`)"
            - "traefik.http.routers.finder.entrypoints=web"
    # translator:
    #    build:
    #        context: ./translator
    #        dockerfile: Dockerfile
    #    depends_on:
    #        - redis
    #    ports:
    #        - "8090:8090"
    #    environment:
    #        GOSPIGA_REDIS_HOST: redis:6379
    #    volumes:
    #        - ./translator/gcloud-key.json:/gcloud-key.json
    traefik:
        image: traefik:v2.2
        # Enables the web UI and tells Traefik to listen to docker
        command:
           #- "--log.level=DEBUG" # (Default: ERROR) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        ports:
            # The HTTP port
            - "8081:80"
            # The Web UI (enabled by --api.insecure=true)
            - "8088:8080"
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock
    redis:
        image: redislabs/redisearch:1.6.10
        depends_on:
            - traefik
        ports:
            - "6379:6379"
        volumes:
            - type: volume
              source: redis
              target: /data
              volume:
                  nocopy: true
        command: ["redis-server", "--loadmodule", "/usr/lib/redis/modules/redisearch.so", "--appendonly", "yes", "--aof-use-rdb-preamble", "yes"]
        labels:
            - "traefik.enable=false"
    zero:
        image: dgraph/dgraph:v20.03.3
        depends_on:
            - traefik
        volumes:
            - type: volume
              source: dgraph
              target: /dgraph
              volume:
                  nocopy: true
        ports:
            - 5080:5080
            - 6080:6080
            - 8060:8080
            - 9060:9080
        restart: on-failure
        command: dgraph zero --my=zero:5080
        labels:
            - "traefik.enable=false"
    alpha:
        image: dgraph/dgraph:v20.03.3
        depends_on:
            - traefik
        volumes:
            - type: volume
              source: dgraph
              target: /dgraph
              volume:
                nocopy: true
        ports:
            - 8090:8080
            - 9080:9080
        restart: on-failure
        command: dgraph alpha --my=alpha:7080 --lru_mb=2048 --zero=zero:5080
        labels:
            - "traefik.enable=false"
    ratel:
        image: dgraph/dgraph:v20.03.3
        depends_on:
            - traefik
        volumes:
            - type: volume
              source: dgraph
              target: /dgraph
              volume:
                  nocopy: true
        ports:
            - 8000:8000
        command: dgraph-ratel
        labels:
            - "traefik.enable=false"
              # - "traefik.http.routers.ratel.rule=PathPrefix(`/ratel`)"
              # - "traefik.http.routers.ratel.entrypoints=web"
              # - "traefik.http.routers.ratel.middlewares=stripprefix-ratel"
              # - "traefik.http.middlewares.stripprefix-ratel.stripprefix.prefixes=/ratel/,/ratel"
              # - "traefik.http.services.ratel-gospiga.loadbalancer.server.port=80"
    lambda:
        image: dgraph/dgraph-lambda:latest
        container_name: lambda
        ports:
          - 8686:8686
        depends_on:
          - alpha
        environment:
          DGRAPH_URL: http://alpha:8090
        volumes:
          - type: bind
            source: ./lambda/dist/recipes.js
            target: /app/script/script.js
            read_only: true

volumes:
    dgraph:
    redis:
