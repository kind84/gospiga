version: "3.7"
services:
    server:
        build:
            context: ./server
            dockerfile: Dockerfile
        depends_on:
            - traefik
            - alpha
            - zero
            - redis
        ports:
            - "8080:80"
        env_file: ./server/.env
        environment:
            PORT: 80
            REDIS_HOST: redis:6379
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.server.rule=PathPrefix(`/server`)"
            - "traefik.http.routers.server.entrypoints=web"
    finder:
        build:
            context: ./finder
            dockerfile: Dockerfile
        depends_on:
            - traefik
            - redis
            - server
        ports:
            - "8070:80"
            - "50051:50051"
        environment:
            PORT: 80
            TCP_PORT: 50051
            REDIS_HOST: redis:6379
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.finder.rule=PathPrefix(`/finder`)"
            - "traefik.http.routers.finder.entrypoints=web"
    # translator:
    #    build:
    #        context: ./translator
    #        dockerfile: Dockerfile
    #    depends_on:
    #        - redis
    #    ports:
    #        - "8090:8090"
    #    environment:
    #        GOSPIGA_REDIS_HOST: redis:6379
    #    volumes:
    #        - ./translator/gcloud-key.json:/gcloud-key.json
    traefik:
        image: traefik:v2.2
        # Enables the web UI and tells Traefik to listen to docker
        command:
           #- "--log.level=DEBUG" # (Default: ERROR) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        ports:
            # The HTTP port
            - "8081:80"
            # The Web UI (enabled by --api.insecure=true)
            - "8088:8080"
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock
    redis:
        image: redislabs/redisearch:1.6.10
        depends_on:
            - traefik
        ports:
            - "6379:6379"
        volumes:
            - type: volume
              source: redis
              target: /data
              volume:
                  nocopy: true
        command: ["redis-server", "--loadmodule", "/usr/lib/redis/modules/redisearch.so", "--appendonly", "yes", "--aof-use-rdb-preamble", "yes"]
        labels:
            - "traefik.enable=false"
    zero:
        image: dgraph/dgraph:v20.11.0
        container_name: zero1
        working_dir: /data/zero1
        ports:
          - 5180:5180
          - 6180:6180
        labels:
          cluster: test
          service: zero1
          traefik.enable: "false"
        volumes:
          - type: bind
            source: $GOPATH/bin
            target: /gobin
            read_only: true
        command: /gobin/dgraph zero -o 100 --logtostderr -v=2 --bindall --expose_trace --profile_mode block --block_rate 10 --my=zero1:5180
    alpha:
        image: dgraph/dgraph:latest
        container_name: alpha1
        working_dir: /data/alpha1
        volumes:
          - type: bind
            source: $GOPATH/bin
            target: /gobin
            read_only: true
        ports:
          - 8180:8180
          - 9180:9180
        labels:
          cluster: test
          service: alpha1
          traefik.enable: "false"
        command: /gobin/dgraph alpha --zero=zero1:5180 -o 100 --expose_trace --trace 1.0
          --profile_mode block --block_rate 10 --logtostderr -v=2
          --whitelist 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16 --my=alpha1:7180
          --graphql_lambda_url=http://lambda:8686/graphql-worker
    lambda:
        image: dgraph/dgraph-lambda:latest
        container_name: lambda
        labels:
          cluster: test
          traefik.enable: "false"
        ports:
          - 8686:8686
        depends_on:
          - alpha
        environment:
          DGRAPH_URL: http://alpha:8180
        volumes:
          - type: bind
            source: ./lambda/dist/recipes.js
            target: /app/script/script.js
            read_only: true

volumes:
    dgraph:
    redis:
